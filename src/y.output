Terminals unused in grammar

   INVALID_IDENT
   INVALID_TOKEN
   FOR
   IMPORT
   EXPORT
   PLUS_ASSIGN
   MINUS_ASSIGN
   MULT_ASSIGN
   DIV_ASSIGN
   MOD_ASSIGN
   INCREMENT
   DECREMENT
   NOT
   COLON
   SEMICOLON


Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNC func_ident LPAREN arguments RPAREN LBRACE statements RBRACE

    5 func_ident: IDENT

    6 arguments: %empty
    7          | argument repeat_arguments

    8 repeat_arguments: %empty
    9                 | COMMA argument repeat_arguments

   10 argument: VAR IDENT

   11 statements: %empty
   12           | statement statements

   13 statement: var_declaration
   14          | arr_declaration
   15          | print_statement
   16          | input_statement
   17          | if_statement
   18          | while_statement
   19          | break_statement
   20          | continue_statement
   21          | function_call
   22          | return_statement
   23          | assign_var
   24          | assign_arr

   25 var_declaration: VAR IDENT assign_statement

   26 arr_declaration: VAR IDENT LBRACK add_expression RBRACK assign_statement

   27 assign_statement: %empty
   28                 | ASSIGN add_expression

   29 print_statement: PRINT LPAREN binary_expression RPAREN

   30 input_statement: INPUT LPAREN NUMBER RPAREN

   31 if_statement: IF expression LBRACE statements RBRACE else_statement

   32 else_statement: %empty
   33               | ELSE LBRACE statements RBRACE

   34 while_statement: WHILE LPAREN binary_expression RPAREN LBRACE statements RBRACE

   35 break_statement: BREAK

   36 continue_statement: CONT

   37 expression: IDENT
   38           | NUMBER
   39           | LPAREN binary_expression RPAREN
   40           | input_statement
   41           | function_call
   42           | IDENT LBRACK add_expression RBRACK

   43 binary_expression: add_expression
   44                  | binary_expression EQ add_expression
   45                  | binary_expression NEQ add_expression
   46                  | binary_expression LT add_expression
   47                  | binary_expression LTE add_expression
   48                  | binary_expression GT add_expression
   49                  | binary_expression GTE add_expression
   50                  | binary_expression AND add_expression
   51                  | binary_expression OR add_expression

   52 add_expression: mult_expression
   53               | add_expression PLUS mult_expression
   54               | add_expression MINUS mult_expression

   55 mult_expression: base_expression
   56                | mult_expression MULT base_expression
   57                | mult_expression DIV base_expression
   58                | mult_expression MOD base_expression

   59 base_expression: expression

   60 assign_var: IDENT ASSIGN add_expression

   61 assign_arr: IDENT LBRACK add_expression RBRACK ASSIGN add_expression

   62 function_call: IDENT LPAREN param RPAREN

   63 param: %empty
   64      | add_expression params

   65 params: %empty
   66       | COMMA add_expression params

   67 return_statement: RETURN add_expression


Terminals, with rules where they appear

$end (0) 0
error (256)
INVALID_IDENT (258)
INVALID_TOKEN (259)
PRINT (260) 29
INPUT (261) 30
WHILE (262) 34
FOR (263)
BREAK (264) 35
CONT (265) 36
IF (266) 31
ELSE (267) 33
IMPORT (268)
EXPORT (269)
FUNC (270) 4
RETURN (271) 67
VAR (272) 10 25 26
PLUS (273) 53
MINUS (274) 54
MULT (275) 56
DIV (276) 57
MOD (277) 58
ASSIGN (278) 28 60 61
PLUS_ASSIGN (279)
MINUS_ASSIGN (280)
MULT_ASSIGN (281)
DIV_ASSIGN (282)
MOD_ASSIGN (283)
INCREMENT (284)
DECREMENT (285)
EQ (286) 44
NEQ (287) 45
LT (288) 46
GT (289) 48
LTE (290) 47
GTE (291) 49
AND (292) 50
OR (293) 51
NOT (294)
LPAREN (295) 4 29 30 34 39 62
RPAREN (296) 4 29 30 34 39 62
LBRACE (297) 4 31 33 34
RBRACE (298) 4 31 33 34
LBRACK (299) 26 42 61
RBRACK (300) 26 42 61
COLON (301)
SEMICOLON (302)
COMMA (303) 9 66
NUMBER (304) 30 38
IDENT (305) 5 10 25 26 37 42 60 61 62


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
prog_start (52)
    on left: 1, on right: 0
functions (53)
    on left: 2 3, on right: 1 3
function (54)
    on left: 4, on right: 3
func_ident (55)
    on left: 5, on right: 4
arguments (56)
    on left: 6 7, on right: 4
repeat_arguments (57)
    on left: 8 9, on right: 7 9
argument (58)
    on left: 10, on right: 7 9
statements (59)
    on left: 11 12, on right: 4 12 31 33 34
statement (60)
    on left: 13 14 15 16 17 18 19 20 21 22 23 24, on right: 12
var_declaration (61)
    on left: 25, on right: 13
arr_declaration (62)
    on left: 26, on right: 14
assign_statement (63)
    on left: 27 28, on right: 25 26
print_statement (64)
    on left: 29, on right: 15
input_statement (65)
    on left: 30, on right: 16 40
if_statement (66)
    on left: 31, on right: 17
else_statement (67)
    on left: 32 33, on right: 31
while_statement (68)
    on left: 34, on right: 18
break_statement (69)
    on left: 35, on right: 19
continue_statement (70)
    on left: 36, on right: 20
expression (71)
    on left: 37 38 39 40 41 42, on right: 31 59
binary_expression (72)
    on left: 43 44 45 46 47 48 49 50 51, on right: 29 34 39 44 45 46
    47 48 49 50 51
add_expression (73)
    on left: 52 53 54, on right: 26 28 42 43 44 45 46 47 48 49 50 51
    53 54 60 61 64 66 67
mult_expression (74)
    on left: 55 56 57 58, on right: 52 53 54 56 57 58
base_expression (75)
    on left: 59, on right: 55 56 57 58
assign_var (76)
    on left: 60, on right: 23
assign_arr (77)
    on left: 61, on right: 24
function_call (78)
    on left: 62, on right: 21 41
param (79)
    on left: 63 64, on right: 62
params (80)
    on left: 65 66, on right: 64 66
return_statement (81)
    on left: 67, on right: 22


State 0

    0 $accept: . prog_start $end

    FUNC  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4


State 1

    4 function: FUNC . func_ident LPAREN arguments RPAREN LBRACE statements RBRACE

    IDENT  shift, and go to state 5

    func_ident  go to state 6


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 7


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    3 functions: function . functions

    FUNC  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 8
    function   go to state 4


State 5

    5 func_ident: IDENT .

    $default  reduce using rule 5 (func_ident)


State 6

    4 function: FUNC func_ident . LPAREN arguments RPAREN LBRACE statements RBRACE

    LPAREN  shift, and go to state 9


State 7

    0 $accept: prog_start $end .

    $default  accept


State 8

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 9

    4 function: FUNC func_ident LPAREN . arguments RPAREN LBRACE statements RBRACE

    VAR  shift, and go to state 10

    $default  reduce using rule 6 (arguments)

    arguments  go to state 11
    argument   go to state 12


State 10

   10 argument: VAR . IDENT

    IDENT  shift, and go to state 13


State 11

    4 function: FUNC func_ident LPAREN arguments . RPAREN LBRACE statements RBRACE

    RPAREN  shift, and go to state 14


State 12

    7 arguments: argument . repeat_arguments

    COMMA  shift, and go to state 15

    $default  reduce using rule 8 (repeat_arguments)

    repeat_arguments  go to state 16


State 13

   10 argument: VAR IDENT .

    $default  reduce using rule 10 (argument)


State 14

    4 function: FUNC func_ident LPAREN arguments RPAREN . LBRACE statements RBRACE

    LBRACE  shift, and go to state 17


State 15

    9 repeat_arguments: COMMA . argument repeat_arguments

    VAR  shift, and go to state 10

    argument  go to state 18


State 16

    7 arguments: argument repeat_arguments .

    $default  reduce using rule 7 (arguments)


State 17

    4 function: FUNC func_ident LPAREN arguments RPAREN LBRACE . statements RBRACE

    PRINT   shift, and go to state 19
    INPUT   shift, and go to state 20
    WHILE   shift, and go to state 21
    BREAK   shift, and go to state 22
    CONT    shift, and go to state 23
    IF      shift, and go to state 24
    RETURN  shift, and go to state 25
    VAR     shift, and go to state 26
    IDENT   shift, and go to state 27

    $default  reduce using rule 11 (statements)

    statements          go to state 28
    statement           go to state 29
    var_declaration     go to state 30
    arr_declaration     go to state 31
    print_statement     go to state 32
    input_statement     go to state 33
    if_statement        go to state 34
    while_statement     go to state 35
    break_statement     go to state 36
    continue_statement  go to state 37
    assign_var          go to state 38
    assign_arr          go to state 39
    function_call       go to state 40
    return_statement    go to state 41


State 18

    9 repeat_arguments: COMMA argument . repeat_arguments

    COMMA  shift, and go to state 15

    $default  reduce using rule 8 (repeat_arguments)

    repeat_arguments  go to state 42


State 19

   29 print_statement: PRINT . LPAREN binary_expression RPAREN

    LPAREN  shift, and go to state 43


State 20

   30 input_statement: INPUT . LPAREN NUMBER RPAREN

    LPAREN  shift, and go to state 44


State 21

   34 while_statement: WHILE . LPAREN binary_expression RPAREN LBRACE statements RBRACE

    LPAREN  shift, and go to state 45


State 22

   35 break_statement: BREAK .

    $default  reduce using rule 35 (break_statement)


State 23

   36 continue_statement: CONT .

    $default  reduce using rule 36 (continue_statement)


State 24

   31 if_statement: IF . expression LBRACE statements RBRACE else_statement

    INPUT   shift, and go to state 20
    LPAREN  shift, and go to state 46
    NUMBER  shift, and go to state 47
    IDENT   shift, and go to state 48

    input_statement  go to state 49
    expression       go to state 50
    function_call    go to state 51


State 25

   67 return_statement: RETURN . add_expression

    INPUT   shift, and go to state 20
    LPAREN  shift, and go to state 46
    NUMBER  shift, and go to state 47
    IDENT   shift, and go to state 48

    input_statement  go to state 49
    expression       go to state 52
    add_expression   go to state 53
    mult_expression  go to state 54
    base_expression  go to state 55
    function_call    go to state 51


State 26

   25 var_declaration: VAR . IDENT assign_statement
   26 arr_declaration: VAR . IDENT LBRACK add_expression RBRACK assign_statement

    IDENT  shift, and go to state 56


State 27

   60 assign_var: IDENT . ASSIGN add_expression
   61 assign_arr: IDENT . LBRACK add_expression RBRACK ASSIGN add_expression
   62 function_call: IDENT . LPAREN param RPAREN

    ASSIGN  shift, and go to state 57
    LPAREN  shift, and go to state 58
    LBRACK  shift, and go to state 59


State 28

    4 function: FUNC func_ident LPAREN arguments RPAREN LBRACE statements . RBRACE

    RBRACE  shift, and go to state 60


State 29

   12 statements: statement . statements

    PRINT   shift, and go to state 19
    INPUT   shift, and go to state 20
    WHILE   shift, and go to state 21
    BREAK   shift, and go to state 22
    CONT    shift, and go to state 23
    IF      shift, and go to state 24
    RETURN  shift, and go to state 25
    VAR     shift, and go to state 26
    IDENT   shift, and go to state 27

    $default  reduce using rule 11 (statements)

    statements          go to state 61
    statement           go to state 29
    var_declaration     go to state 30
    arr_declaration     go to state 31
    print_statement     go to state 32
    input_statement     go to state 33
    if_statement        go to state 34
    while_statement     go to state 35
    break_statement     go to state 36
    continue_statement  go to state 37
    assign_var          go to state 38
    assign_arr          go to state 39
    function_call       go to state 40
    return_statement    go to state 41


State 30

   13 statement: var_declaration .

    $default  reduce using rule 13 (statement)


State 31

   14 statement: arr_declaration .

    $default  reduce using rule 14 (statement)


State 32

   15 statement: print_statement .

    $default  reduce using rule 15 (statement)


State 33

   16 statement: input_statement .

    $default  reduce using rule 16 (statement)


State 34

   17 statement: if_statement .

    $default  reduce using rule 17 (statement)


State 35

   18 statement: while_statement .

    $default  reduce using rule 18 (statement)


State 36

   19 statement: break_statement .

    $default  reduce using rule 19 (statement)


State 37

   20 statement: continue_statement .

    $default  reduce using rule 20 (statement)


State 38

   23 statement: assign_var .

    $default  reduce using rule 23 (statement)


State 39

   24 statement: assign_arr .

    $default  reduce using rule 24 (statement)


State 40

   21 statement: function_call .

    $default  reduce using rule 21 (statement)


State 41

   22 statement: return_statement .

    $default  reduce using rule 22 (statement)


State 42

    9 repeat_arguments: COMMA argument repeat_arguments .

    $default  reduce using rule 9 (repeat_arguments)


State 43

   29 print_statement: PRINT LPAREN . binary_expression RPAREN

    INPUT   shift, and go to state 20
    LPAREN  shift, and go to state 46
    NUMBER  shift, and go to state 47
    IDENT   shift, and go to state 48

    input_statement    go to state 49
    expression         go to state 52
    binary_expression  go to state 62
    add_expression     go to state 63
    mult_expression    go to state 54
    base_expression    go to state 55
    function_call      go to state 51


State 44

   30 input_statement: INPUT LPAREN . NUMBER RPAREN

    NUMBER  shift, and go to state 64


State 45

   34 while_statement: WHILE LPAREN . binary_expression RPAREN LBRACE statements RBRACE

    INPUT   shift, and go to state 20
    LPAREN  shift, and go to state 46
    NUMBER  shift, and go to state 47
    IDENT   shift, and go to state 48

    input_statement    go to state 49
    expression         go to state 52
    binary_expression  go to state 65
    add_expression     go to state 63
    mult_expression    go to state 54
    base_expression    go to state 55
    function_call      go to state 51


State 46

   39 expression: LPAREN . binary_expression RPAREN

    INPUT   shift, and go to state 20
    LPAREN  shift, and go to state 46
    NUMBER  shift, and go to state 47
    IDENT   shift, and go to state 48

    input_statement    go to state 49
    expression         go to state 52
    binary_expression  go to state 66
    add_expression     go to state 63
    mult_expression    go to state 54
    base_expression    go to state 55
    function_call      go to state 51


State 47

   38 expression: NUMBER .

    $default  reduce using rule 38 (expression)


State 48

   37 expression: IDENT .
   42           | IDENT . LBRACK add_expression RBRACK
   62 function_call: IDENT . LPAREN param RPAREN

    LPAREN  shift, and go to state 58
    LBRACK  shift, and go to state 67

    $default  reduce using rule 37 (expression)


State 49

   40 expression: input_statement .

    $default  reduce using rule 40 (expression)


State 50

   31 if_statement: IF expression . LBRACE statements RBRACE else_statement

    LBRACE  shift, and go to state 68


State 51

   41 expression: function_call .

    $default  reduce using rule 41 (expression)


State 52

   59 base_expression: expression .

    $default  reduce using rule 59 (base_expression)


State 53

   53 add_expression: add_expression . PLUS mult_expression
   54               | add_expression . MINUS mult_expression
   67 return_statement: RETURN add_expression .

    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70

    $default  reduce using rule 67 (return_statement)


State 54

   52 add_expression: mult_expression .
   56 mult_expression: mult_expression . MULT base_expression
   57                | mult_expression . DIV base_expression
   58                | mult_expression . MOD base_expression

    MULT  shift, and go to state 71
    DIV   shift, and go to state 72
    MOD   shift, and go to state 73

    $default  reduce using rule 52 (add_expression)


State 55

   55 mult_expression: base_expression .

    $default  reduce using rule 55 (mult_expression)


State 56

   25 var_declaration: VAR IDENT . assign_statement
   26 arr_declaration: VAR IDENT . LBRACK add_expression RBRACK assign_statement

    ASSIGN  shift, and go to state 74
    LBRACK  shift, and go to state 75

    $default  reduce using rule 27 (assign_statement)

    assign_statement  go to state 76


State 57

   60 assign_var: IDENT ASSIGN . add_expression

    INPUT   shift, and go to state 20
    LPAREN  shift, and go to state 46
    NUMBER  shift, and go to state 47
    IDENT   shift, and go to state 48

    input_statement  go to state 49
    expression       go to state 52
    add_expression   go to state 77
    mult_expression  go to state 54
    base_expression  go to state 55
    function_call    go to state 51


State 58

   62 function_call: IDENT LPAREN . param RPAREN

    INPUT   shift, and go to state 20
    LPAREN  shift, and go to state 46
    NUMBER  shift, and go to state 47
    IDENT   shift, and go to state 48

    $default  reduce using rule 63 (param)

    input_statement  go to state 49
    expression       go to state 52
    add_expression   go to state 78
    mult_expression  go to state 54
    base_expression  go to state 55
    function_call    go to state 51
    param            go to state 79


State 59

   61 assign_arr: IDENT LBRACK . add_expression RBRACK ASSIGN add_expression

    INPUT   shift, and go to state 20
    LPAREN  shift, and go to state 46
    NUMBER  shift, and go to state 47
    IDENT   shift, and go to state 48

    input_statement  go to state 49
    expression       go to state 52
    add_expression   go to state 80
    mult_expression  go to state 54
    base_expression  go to state 55
    function_call    go to state 51


State 60

    4 function: FUNC func_ident LPAREN arguments RPAREN LBRACE statements RBRACE .

    $default  reduce using rule 4 (function)


State 61

   12 statements: statement statements .

    $default  reduce using rule 12 (statements)


State 62

   29 print_statement: PRINT LPAREN binary_expression . RPAREN
   44 binary_expression: binary_expression . EQ add_expression
   45                  | binary_expression . NEQ add_expression
   46                  | binary_expression . LT add_expression
   47                  | binary_expression . LTE add_expression
   48                  | binary_expression . GT add_expression
   49                  | binary_expression . GTE add_expression
   50                  | binary_expression . AND add_expression
   51                  | binary_expression . OR add_expression

    EQ      shift, and go to state 81
    NEQ     shift, and go to state 82
    LT      shift, and go to state 83
    GT      shift, and go to state 84
    LTE     shift, and go to state 85
    GTE     shift, and go to state 86
    AND     shift, and go to state 87
    OR      shift, and go to state 88
    RPAREN  shift, and go to state 89


State 63

   43 binary_expression: add_expression .
   53 add_expression: add_expression . PLUS mult_expression
   54               | add_expression . MINUS mult_expression

    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70

    $default  reduce using rule 43 (binary_expression)


State 64

   30 input_statement: INPUT LPAREN NUMBER . RPAREN

    RPAREN  shift, and go to state 90


State 65

   34 while_statement: WHILE LPAREN binary_expression . RPAREN LBRACE statements RBRACE
   44 binary_expression: binary_expression . EQ add_expression
   45                  | binary_expression . NEQ add_expression
   46                  | binary_expression . LT add_expression
   47                  | binary_expression . LTE add_expression
   48                  | binary_expression . GT add_expression
   49                  | binary_expression . GTE add_expression
   50                  | binary_expression . AND add_expression
   51                  | binary_expression . OR add_expression

    EQ      shift, and go to state 81
    NEQ     shift, and go to state 82
    LT      shift, and go to state 83
    GT      shift, and go to state 84
    LTE     shift, and go to state 85
    GTE     shift, and go to state 86
    AND     shift, and go to state 87
    OR      shift, and go to state 88
    RPAREN  shift, and go to state 91


State 66

   39 expression: LPAREN binary_expression . RPAREN
   44 binary_expression: binary_expression . EQ add_expression
   45                  | binary_expression . NEQ add_expression
   46                  | binary_expression . LT add_expression
   47                  | binary_expression . LTE add_expression
   48                  | binary_expression . GT add_expression
   49                  | binary_expression . GTE add_expression
   50                  | binary_expression . AND add_expression
   51                  | binary_expression . OR add_expression

    EQ      shift, and go to state 81
    NEQ     shift, and go to state 82
    LT      shift, and go to state 83
    GT      shift, and go to state 84
    LTE     shift, and go to state 85
    GTE     shift, and go to state 86
    AND     shift, and go to state 87
    OR      shift, and go to state 88
    RPAREN  shift, and go to state 92


State 67

   42 expression: IDENT LBRACK . add_expression RBRACK

    INPUT   shift, and go to state 20
    LPAREN  shift, and go to state 46
    NUMBER  shift, and go to state 47
    IDENT   shift, and go to state 48

    input_statement  go to state 49
    expression       go to state 52
    add_expression   go to state 93
    mult_expression  go to state 54
    base_expression  go to state 55
    function_call    go to state 51


State 68

   31 if_statement: IF expression LBRACE . statements RBRACE else_statement

    PRINT   shift, and go to state 19
    INPUT   shift, and go to state 20
    WHILE   shift, and go to state 21
    BREAK   shift, and go to state 22
    CONT    shift, and go to state 23
    IF      shift, and go to state 24
    RETURN  shift, and go to state 25
    VAR     shift, and go to state 26
    IDENT   shift, and go to state 27

    $default  reduce using rule 11 (statements)

    statements          go to state 94
    statement           go to state 29
    var_declaration     go to state 30
    arr_declaration     go to state 31
    print_statement     go to state 32
    input_statement     go to state 33
    if_statement        go to state 34
    while_statement     go to state 35
    break_statement     go to state 36
    continue_statement  go to state 37
    assign_var          go to state 38
    assign_arr          go to state 39
    function_call       go to state 40
    return_statement    go to state 41


State 69

   53 add_expression: add_expression PLUS . mult_expression

    INPUT   shift, and go to state 20
    LPAREN  shift, and go to state 46
    NUMBER  shift, and go to state 47
    IDENT   shift, and go to state 48

    input_statement  go to state 49
    expression       go to state 52
    mult_expression  go to state 95
    base_expression  go to state 55
    function_call    go to state 51


State 70

   54 add_expression: add_expression MINUS . mult_expression

    INPUT   shift, and go to state 20
    LPAREN  shift, and go to state 46
    NUMBER  shift, and go to state 47
    IDENT   shift, and go to state 48

    input_statement  go to state 49
    expression       go to state 52
    mult_expression  go to state 96
    base_expression  go to state 55
    function_call    go to state 51


State 71

   56 mult_expression: mult_expression MULT . base_expression

    INPUT   shift, and go to state 20
    LPAREN  shift, and go to state 46
    NUMBER  shift, and go to state 47
    IDENT   shift, and go to state 48

    input_statement  go to state 49
    expression       go to state 52
    base_expression  go to state 97
    function_call    go to state 51


State 72

   57 mult_expression: mult_expression DIV . base_expression

    INPUT   shift, and go to state 20
    LPAREN  shift, and go to state 46
    NUMBER  shift, and go to state 47
    IDENT   shift, and go to state 48

    input_statement  go to state 49
    expression       go to state 52
    base_expression  go to state 98
    function_call    go to state 51


State 73

   58 mult_expression: mult_expression MOD . base_expression

    INPUT   shift, and go to state 20
    LPAREN  shift, and go to state 46
    NUMBER  shift, and go to state 47
    IDENT   shift, and go to state 48

    input_statement  go to state 49
    expression       go to state 52
    base_expression  go to state 99
    function_call    go to state 51


State 74

   28 assign_statement: ASSIGN . add_expression

    INPUT   shift, and go to state 20
    LPAREN  shift, and go to state 46
    NUMBER  shift, and go to state 47
    IDENT   shift, and go to state 48

    input_statement  go to state 49
    expression       go to state 52
    add_expression   go to state 100
    mult_expression  go to state 54
    base_expression  go to state 55
    function_call    go to state 51


State 75

   26 arr_declaration: VAR IDENT LBRACK . add_expression RBRACK assign_statement

    INPUT   shift, and go to state 20
    LPAREN  shift, and go to state 46
    NUMBER  shift, and go to state 47
    IDENT   shift, and go to state 48

    input_statement  go to state 49
    expression       go to state 52
    add_expression   go to state 101
    mult_expression  go to state 54
    base_expression  go to state 55
    function_call    go to state 51


State 76

   25 var_declaration: VAR IDENT assign_statement .

    $default  reduce using rule 25 (var_declaration)


State 77

   53 add_expression: add_expression . PLUS mult_expression
   54               | add_expression . MINUS mult_expression
   60 assign_var: IDENT ASSIGN add_expression .

    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70

    $default  reduce using rule 60 (assign_var)


State 78

   53 add_expression: add_expression . PLUS mult_expression
   54               | add_expression . MINUS mult_expression
   64 param: add_expression . params

    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70
    COMMA  shift, and go to state 102

    $default  reduce using rule 65 (params)

    params  go to state 103


State 79

   62 function_call: IDENT LPAREN param . RPAREN

    RPAREN  shift, and go to state 104


State 80

   53 add_expression: add_expression . PLUS mult_expression
   54               | add_expression . MINUS mult_expression
   61 assign_arr: IDENT LBRACK add_expression . RBRACK ASSIGN add_expression

    PLUS    shift, and go to state 69
    MINUS   shift, and go to state 70
    RBRACK  shift, and go to state 105


State 81

   44 binary_expression: binary_expression EQ . add_expression

    INPUT   shift, and go to state 20
    LPAREN  shift, and go to state 46
    NUMBER  shift, and go to state 47
    IDENT   shift, and go to state 48

    input_statement  go to state 49
    expression       go to state 52
    add_expression   go to state 106
    mult_expression  go to state 54
    base_expression  go to state 55
    function_call    go to state 51


State 82

   45 binary_expression: binary_expression NEQ . add_expression

    INPUT   shift, and go to state 20
    LPAREN  shift, and go to state 46
    NUMBER  shift, and go to state 47
    IDENT   shift, and go to state 48

    input_statement  go to state 49
    expression       go to state 52
    add_expression   go to state 107
    mult_expression  go to state 54
    base_expression  go to state 55
    function_call    go to state 51


State 83

   46 binary_expression: binary_expression LT . add_expression

    INPUT   shift, and go to state 20
    LPAREN  shift, and go to state 46
    NUMBER  shift, and go to state 47
    IDENT   shift, and go to state 48

    input_statement  go to state 49
    expression       go to state 52
    add_expression   go to state 108
    mult_expression  go to state 54
    base_expression  go to state 55
    function_call    go to state 51


State 84

   48 binary_expression: binary_expression GT . add_expression

    INPUT   shift, and go to state 20
    LPAREN  shift, and go to state 46
    NUMBER  shift, and go to state 47
    IDENT   shift, and go to state 48

    input_statement  go to state 49
    expression       go to state 52
    add_expression   go to state 109
    mult_expression  go to state 54
    base_expression  go to state 55
    function_call    go to state 51


State 85

   47 binary_expression: binary_expression LTE . add_expression

    INPUT   shift, and go to state 20
    LPAREN  shift, and go to state 46
    NUMBER  shift, and go to state 47
    IDENT   shift, and go to state 48

    input_statement  go to state 49
    expression       go to state 52
    add_expression   go to state 110
    mult_expression  go to state 54
    base_expression  go to state 55
    function_call    go to state 51


State 86

   49 binary_expression: binary_expression GTE . add_expression

    INPUT   shift, and go to state 20
    LPAREN  shift, and go to state 46
    NUMBER  shift, and go to state 47
    IDENT   shift, and go to state 48

    input_statement  go to state 49
    expression       go to state 52
    add_expression   go to state 111
    mult_expression  go to state 54
    base_expression  go to state 55
    function_call    go to state 51


State 87

   50 binary_expression: binary_expression AND . add_expression

    INPUT   shift, and go to state 20
    LPAREN  shift, and go to state 46
    NUMBER  shift, and go to state 47
    IDENT   shift, and go to state 48

    input_statement  go to state 49
    expression       go to state 52
    add_expression   go to state 112
    mult_expression  go to state 54
    base_expression  go to state 55
    function_call    go to state 51


State 88

   51 binary_expression: binary_expression OR . add_expression

    INPUT   shift, and go to state 20
    LPAREN  shift, and go to state 46
    NUMBER  shift, and go to state 47
    IDENT   shift, and go to state 48

    input_statement  go to state 49
    expression       go to state 52
    add_expression   go to state 113
    mult_expression  go to state 54
    base_expression  go to state 55
    function_call    go to state 51


State 89

   29 print_statement: PRINT LPAREN binary_expression RPAREN .

    $default  reduce using rule 29 (print_statement)


State 90

   30 input_statement: INPUT LPAREN NUMBER RPAREN .

    $default  reduce using rule 30 (input_statement)


State 91

   34 while_statement: WHILE LPAREN binary_expression RPAREN . LBRACE statements RBRACE

    LBRACE  shift, and go to state 114


State 92

   39 expression: LPAREN binary_expression RPAREN .

    $default  reduce using rule 39 (expression)


State 93

   42 expression: IDENT LBRACK add_expression . RBRACK
   53 add_expression: add_expression . PLUS mult_expression
   54               | add_expression . MINUS mult_expression

    PLUS    shift, and go to state 69
    MINUS   shift, and go to state 70
    RBRACK  shift, and go to state 115


State 94

   31 if_statement: IF expression LBRACE statements . RBRACE else_statement

    RBRACE  shift, and go to state 116


State 95

   53 add_expression: add_expression PLUS mult_expression .
   56 mult_expression: mult_expression . MULT base_expression
   57                | mult_expression . DIV base_expression
   58                | mult_expression . MOD base_expression

    MULT  shift, and go to state 71
    DIV   shift, and go to state 72
    MOD   shift, and go to state 73

    $default  reduce using rule 53 (add_expression)


State 96

   54 add_expression: add_expression MINUS mult_expression .
   56 mult_expression: mult_expression . MULT base_expression
   57                | mult_expression . DIV base_expression
   58                | mult_expression . MOD base_expression

    MULT  shift, and go to state 71
    DIV   shift, and go to state 72
    MOD   shift, and go to state 73

    $default  reduce using rule 54 (add_expression)


State 97

   56 mult_expression: mult_expression MULT base_expression .

    $default  reduce using rule 56 (mult_expression)


State 98

   57 mult_expression: mult_expression DIV base_expression .

    $default  reduce using rule 57 (mult_expression)


State 99

   58 mult_expression: mult_expression MOD base_expression .

    $default  reduce using rule 58 (mult_expression)


State 100

   28 assign_statement: ASSIGN add_expression .
   53 add_expression: add_expression . PLUS mult_expression
   54               | add_expression . MINUS mult_expression

    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70

    $default  reduce using rule 28 (assign_statement)


State 101

   26 arr_declaration: VAR IDENT LBRACK add_expression . RBRACK assign_statement
   53 add_expression: add_expression . PLUS mult_expression
   54               | add_expression . MINUS mult_expression

    PLUS    shift, and go to state 69
    MINUS   shift, and go to state 70
    RBRACK  shift, and go to state 117


State 102

   66 params: COMMA . add_expression params

    INPUT   shift, and go to state 20
    LPAREN  shift, and go to state 46
    NUMBER  shift, and go to state 47
    IDENT   shift, and go to state 48

    input_statement  go to state 49
    expression       go to state 52
    add_expression   go to state 118
    mult_expression  go to state 54
    base_expression  go to state 55
    function_call    go to state 51


State 103

   64 param: add_expression params .

    $default  reduce using rule 64 (param)


State 104

   62 function_call: IDENT LPAREN param RPAREN .

    $default  reduce using rule 62 (function_call)


State 105

   61 assign_arr: IDENT LBRACK add_expression RBRACK . ASSIGN add_expression

    ASSIGN  shift, and go to state 119


State 106

   44 binary_expression: binary_expression EQ add_expression .
   53 add_expression: add_expression . PLUS mult_expression
   54               | add_expression . MINUS mult_expression

    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70

    $default  reduce using rule 44 (binary_expression)


State 107

   45 binary_expression: binary_expression NEQ add_expression .
   53 add_expression: add_expression . PLUS mult_expression
   54               | add_expression . MINUS mult_expression

    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70

    $default  reduce using rule 45 (binary_expression)


State 108

   46 binary_expression: binary_expression LT add_expression .
   53 add_expression: add_expression . PLUS mult_expression
   54               | add_expression . MINUS mult_expression

    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70

    $default  reduce using rule 46 (binary_expression)


State 109

   48 binary_expression: binary_expression GT add_expression .
   53 add_expression: add_expression . PLUS mult_expression
   54               | add_expression . MINUS mult_expression

    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70

    $default  reduce using rule 48 (binary_expression)


State 110

   47 binary_expression: binary_expression LTE add_expression .
   53 add_expression: add_expression . PLUS mult_expression
   54               | add_expression . MINUS mult_expression

    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70

    $default  reduce using rule 47 (binary_expression)


State 111

   49 binary_expression: binary_expression GTE add_expression .
   53 add_expression: add_expression . PLUS mult_expression
   54               | add_expression . MINUS mult_expression

    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70

    $default  reduce using rule 49 (binary_expression)


State 112

   50 binary_expression: binary_expression AND add_expression .
   53 add_expression: add_expression . PLUS mult_expression
   54               | add_expression . MINUS mult_expression

    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70

    $default  reduce using rule 50 (binary_expression)


State 113

   51 binary_expression: binary_expression OR add_expression .
   53 add_expression: add_expression . PLUS mult_expression
   54               | add_expression . MINUS mult_expression

    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70

    $default  reduce using rule 51 (binary_expression)


State 114

   34 while_statement: WHILE LPAREN binary_expression RPAREN LBRACE . statements RBRACE

    PRINT   shift, and go to state 19
    INPUT   shift, and go to state 20
    WHILE   shift, and go to state 21
    BREAK   shift, and go to state 22
    CONT    shift, and go to state 23
    IF      shift, and go to state 24
    RETURN  shift, and go to state 25
    VAR     shift, and go to state 26
    IDENT   shift, and go to state 27

    $default  reduce using rule 11 (statements)

    statements          go to state 120
    statement           go to state 29
    var_declaration     go to state 30
    arr_declaration     go to state 31
    print_statement     go to state 32
    input_statement     go to state 33
    if_statement        go to state 34
    while_statement     go to state 35
    break_statement     go to state 36
    continue_statement  go to state 37
    assign_var          go to state 38
    assign_arr          go to state 39
    function_call       go to state 40
    return_statement    go to state 41


State 115

   42 expression: IDENT LBRACK add_expression RBRACK .

    $default  reduce using rule 42 (expression)


State 116

   31 if_statement: IF expression LBRACE statements RBRACE . else_statement

    ELSE  shift, and go to state 121

    $default  reduce using rule 32 (else_statement)

    else_statement  go to state 122


State 117

   26 arr_declaration: VAR IDENT LBRACK add_expression RBRACK . assign_statement

    ASSIGN  shift, and go to state 74

    $default  reduce using rule 27 (assign_statement)

    assign_statement  go to state 123


State 118

   53 add_expression: add_expression . PLUS mult_expression
   54               | add_expression . MINUS mult_expression
   66 params: COMMA add_expression . params

    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70
    COMMA  shift, and go to state 102

    $default  reduce using rule 65 (params)

    params  go to state 124


State 119

   61 assign_arr: IDENT LBRACK add_expression RBRACK ASSIGN . add_expression

    INPUT   shift, and go to state 20
    LPAREN  shift, and go to state 46
    NUMBER  shift, and go to state 47
    IDENT   shift, and go to state 48

    input_statement  go to state 49
    expression       go to state 52
    add_expression   go to state 125
    mult_expression  go to state 54
    base_expression  go to state 55
    function_call    go to state 51


State 120

   34 while_statement: WHILE LPAREN binary_expression RPAREN LBRACE statements . RBRACE

    RBRACE  shift, and go to state 126


State 121

   33 else_statement: ELSE . LBRACE statements RBRACE

    LBRACE  shift, and go to state 127


State 122

   31 if_statement: IF expression LBRACE statements RBRACE else_statement .

    $default  reduce using rule 31 (if_statement)


State 123

   26 arr_declaration: VAR IDENT LBRACK add_expression RBRACK assign_statement .

    $default  reduce using rule 26 (arr_declaration)


State 124

   66 params: COMMA add_expression params .

    $default  reduce using rule 66 (params)


State 125

   53 add_expression: add_expression . PLUS mult_expression
   54               | add_expression . MINUS mult_expression
   61 assign_arr: IDENT LBRACK add_expression RBRACK ASSIGN add_expression .

    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70

    $default  reduce using rule 61 (assign_arr)


State 126

   34 while_statement: WHILE LPAREN binary_expression RPAREN LBRACE statements RBRACE .

    $default  reduce using rule 34 (while_statement)


State 127

   33 else_statement: ELSE LBRACE . statements RBRACE

    PRINT   shift, and go to state 19
    INPUT   shift, and go to state 20
    WHILE   shift, and go to state 21
    BREAK   shift, and go to state 22
    CONT    shift, and go to state 23
    IF      shift, and go to state 24
    RETURN  shift, and go to state 25
    VAR     shift, and go to state 26
    IDENT   shift, and go to state 27

    $default  reduce using rule 11 (statements)

    statements          go to state 128
    statement           go to state 29
    var_declaration     go to state 30
    arr_declaration     go to state 31
    print_statement     go to state 32
    input_statement     go to state 33
    if_statement        go to state 34
    while_statement     go to state 35
    break_statement     go to state 36
    continue_statement  go to state 37
    assign_var          go to state 38
    assign_arr          go to state 39
    function_call       go to state 40
    return_statement    go to state 41


State 128

   33 else_statement: ELSE LBRACE statements . RBRACE

    RBRACE  shift, and go to state 129


State 129

   33 else_statement: ELSE LBRACE statements RBRACE .

    $default  reduce using rule 33 (else_statement)
